# 메소드
## CreateRandom
- 컴퓨터가 랜덤으로 세 자리 숫자를 생성하는 메소드

## InputUser
- 유저에게서 세 자리 숫자를 String으로 입력받음
- 입력받은 값이 예외에 해당하면 예외처리
- 입력받은 String 값을 int로 변환하여 리스트에 차례대로 저장

## CalcStrike
- 컴퓨터가 생성한 값과 유저가 입력한 값을 비교하여 볼인지 스트라이크인지 판단
- 볼과 스트라이크 개수만큼 가중치를 추가

## CheckAnswer
- CalcStrike에서  계산된 값을 바탕으로 가중치를 계산
- 정답(3스트라이크) 게임 종료를 출력
- 정답이 아니면 볼과 스트라이크의 개수를 출력

## EndGame
- 게임 종료시에 새로 시작 여부를 물어보고, 수행
- 입력값의 예외 처리

## NumberGame
- 숫자 게임의 본체 메소드
- CreateRandom 메소드로 컴퓨터가 랜덤 숫자를 생성함
- UserInput 메소드로 유저에게 값을 입력받고
- CalcStrike 메소드로 볼과 스트라이크의 개수를 계산하고
- CheckAnswer 메소드로 정답 여부를 계산하고
- 정답이 아니면 유저에게 값을 입력받고 정답을 계산하는 과정을 반복한다.
- 정답이라면 EndGame 메소드로 게임의 지속 여부를 묻고
- 지속하지 않는다면 종료한다.
- 지속한다면 컴퓨터가 랜덤 숫자를 생성하느 과정부터 다시 시작한다.

## main
- NumberGame 메소드를 실행한다.
---
# 변수
## strike (int)
- 스트라이크의 개수를 나타낸다

## ball (int)
- 볼의 개수를 나타낸다

## weight (int[])
- 스트라이크와 볼의 가중치를 저장한다.
  - 인덱스 0은 스트라이크, 1은 볼의 가중치
## computer (list <int>)
- 컴퓨터가 생성한 세 자리 숫자를 리스트의 앞에서부터 차례대로 저장한다.

## user
- 유저가 입력한 세 자리 숫자를 리스트의 앞에서부터 차례대로 저장한다.

## input
- 유저에게 최초로 입력받은 string 값을 저장한다.

## gamestate
- 현재 게임이 진행중인지 아닌지의 상태를 나타낸다.

## correctness
- 유저가 입력한 값의 정답 여부를 나타낸다.

## menu
- 게임을 지속할건지 여부를 입력받는 변수이다.

